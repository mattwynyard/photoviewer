{"version":3,"sources":["util.js","CustomNav.js","App.js","serviceWorker.js","index.js"],"names":["exports","translateMatrix","matrix","tx","ty","scaleMatrix","scaleX","scaleY","LatLongToPixelXY","latitude","longitude","pi_180","Math","PI","pi_4","sinLatitude","sin","x","y","log","gen_offscreen_colors","i","colorLookup","CustomNav","props","setTitle","user","setState","title","state","onClick","func","this","Nav","className","Link","id","href","NavDropdown","Item","React","Component","App","callBackendAPI","a","async","fetch","host","response","json","body","status","alert","Error","message","customNav","createRef","location","lat","lng","getHost","token","Cookies","get","login","getUser","loginModal","getLoginModal","zIndex","tileServer","process","MAPBOX","osmThumbnail","mode","zoom","index","centreData","objData","fault","priority","sizes","photos","currentPhoto","currentFault","layers","bounds","icon","getCustomIcon","show","showLogin","showContact","showTerms","showAbout","modalPhoto","popover","filterModal","activeSelection","photourl","amazon","password","projectArr","getProjects","faultClass","faultTypes","pageActive","checkedFaults","checked","activeProject","activeLayers","clearDisabled","current","setOnClick","catch","err","cookie","undefined","JSON","parse","e","clickLogin","logout","data","size","getSize","L","iconUrl","iconSize","iconAnchor","latLngs","length","position","st_asgeojson","coordinates","latlng","latLng","push","obj","roadid","carriage","carriagewa","photo","photoid","datetime","faulttime","latLngBounds","map","leafletElement","fitBounds","lineData","console","linestring","points","segment","j","point","target","getZoom","getBounds","getFault","direction","intSuffix","parseInt","slice","n","newSuffix","pad","newPhoto","getPhoto","url","options","remove","method","credentials","headers","stringify","reset","preventDefault","userInput","value","key","passwordInput","result","set","expires","buildProjects","projects","prj","code","attributes","project","description","date","filterLayer","splice","filter","addMarkers","menu","addCentrelines","classes","getFaultTypes","cls","type","faults","arr","loadFilters","width","z","Array","join","random","toString","substr","attribute","centre","CustomMenu","drop","Divider","Navbar","bg","expand","Brand","src","height","alt","loadLayer","removeLayer","loadCentreline","clickFilter","clickTerms","clickContact","documentation","clickAbout","ref","Map","worldCopyJump","boxZoom","center","onZoom","TileLayer","attribution","ScaleControl","Image","toogleMap","thumbnail","LayersControl","layer","Overlay","name","LayerGroup","Marker","draggable","clickMarker","Popup","clickImage","latlngs","Polyline","weight","color","getColor","smoothFactor","positions","Modal","centered","Header","Title","Pagination","active","clickPage","Body","Table","striped","bordered","hover","isChecked","onChange","changeCheck","Footer","Button","variant","clearFilter","submitFilter","clickClose","Form","Group","controlId","Label","Control","placeholder","Text","clickPrev","closePhotoModal","clickNext","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0aeb49e.chunk.js","sourcesContent":["const fromRgb = n => Math.ceil((parseInt(n).map(0, 255, 0, 1)) * 1000) / 1000;\r\n\r\nconst colorLookup = {}\r\n\r\n// Generates off screen color for data point\r\nconst gen_offscreen_colors = function(i) {\r\n  if (i === 65535) {\r\n    i += 1;\r\n  } // Do not use red\r\n  const r = ((i + 1) >> 16) & 0xff;\r\n  const g = ((i + 1) >> 8) & 0xff;\r\n  const b = (i + 1) & 0xff;\r\n  return [r, g, b];\r\n};\r\n\r\nfunction LatLongToPixelXY(latitude, longitude) {\r\n  var pi_180 = Math.PI / 180.0;\r\n  var pi_4 = Math.PI * 4;\r\n  var sinLatitude = Math.sin(latitude * pi_180);\r\n  var pixelY = (0.5 - Math.log((1 + sinLatitude) / (1 - sinLatitude)) / pi_4) * 256;\r\n  var pixelX = (longitude + 180) / 360 * 256;\r\n\r\n  var pixel = {\r\n    x: pixelX,\r\n    y: pixelY\r\n  };\r\n\r\n  return pixel;\r\n}\r\n\r\nfunction translateMatrix(matrix, tx, ty) {\r\n  // translation is in last column of matrix\r\n  matrix[12] += matrix[0] * tx + matrix[4] * ty;\r\n  matrix[13] += matrix[1] * tx + matrix[5] * ty;\r\n  matrix[14] += matrix[2] * tx + matrix[6] * ty;\r\n  matrix[15] += matrix[3] * tx + matrix[7] * ty;\r\n}\r\n\r\nfunction scaleMatrix(matrix, scaleX, scaleY) {\r\n  // scaling x and y, which is just scaling first two columns of matrix\r\n  matrix[0] *= scaleX;\r\n  matrix[1] *= scaleX;\r\n  matrix[2] *= scaleX;\r\n  matrix[3] *= scaleX;\r\n\r\n  matrix[4] *= scaleY;\r\n  matrix[5] *= scaleY;\r\n  matrix[6] *= scaleY;\r\n  matrix[7] *= scaleY;\r\n}\r\n\r\nexports.translateMatrix = translateMatrix;\r\nexports.scaleMatrix = scaleMatrix;\r\nexports.LatLongToPixelXY = LatLongToPixelXY;\r\nexports.gen_offscreen_colors = gen_offscreen_colors;\r\nexports.colorLookup = colorLookup;","import React from 'react';\r\nimport {Nav, NavDropdown}  from 'react-bootstrap';\r\n\r\nexport default class CustomNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"Login\",\r\n            onClick: null,\r\n\r\n        }\r\n    }\r\n\r\n    setTitle = (user) => {\r\n      this.setState({title: user});\r\n    }\r\n\r\n    setOnClick(func) {\r\n      this.setState({onClick: func});\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.title === 'Login') {\r\n            return (\r\n              <Nav className=\"ml-auto\">\r\n                <Nav.Link  id=\"Login\" href=\"#login\" onClick={this.state.onClick}>{this.state.title} </Nav.Link>\r\n              </Nav>);\r\n          } else {\r\n            return (\r\n            <Nav className=\"ml-auto\"><NavDropdown className=\"navdropdown\" title={this.state.title} id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item className=\"navdropdownitem\" href=\"#login\"  onClick={this.state.onClick}>Logout</NavDropdown.Item>\r\n            </NavDropdown></Nav>);\r\n          }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Map, TileLayer, Marker, Polyline, Popup, ScaleControl, LayersControl, LayerGroup}  from 'react-leaflet';\r\nimport {Navbar, Nav, NavDropdown, Modal, Button, Image, Form, Dropdown, Table, Pagination}  from 'react-bootstrap';\r\nimport L from 'leaflet';\r\nimport './App.css';\r\nimport './util.js';\r\nimport CustomNav from './CustomNav.js'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    this.customNav = React.createRef();\r\n    this.state = {\r\n      location: {\r\n        lat: -41.2728,\r\n        lng: 173.2995,\r\n      },\r\n      host: this.getHost(),\r\n      token: Cookies.get('token'),\r\n      login: this.getUser(),\r\n      loginModal: this.getLoginModal(this.getUser()),\r\n      zIndex: 900,\r\n      tileServer: \"//api.mapbox.com/styles/v1/mapbox/satellite-streets-v11/tiles/{z}/{x}/{y}?access_token=\" + process.env.MAPBOX,\r\n      osmThumbnail: \"satellite64.png\",\r\n      mode: \"map\",\r\n      zoom: 8,\r\n      index: null,\r\n      centreData: [],\r\n      objData: [],\r\n      fault: [],\r\n      priority: [],\r\n      sizes: [],\r\n      photos: [],\r\n      currentPhoto: null,\r\n      currentFault: [],\r\n      layers: [],\r\n      bounds: {},\r\n      icon: this.getCustomIcon(),\r\n      show: false,\r\n      showLogin: false,\r\n      showContact: false,\r\n      showTerms: false,\r\n      showAbout: false,\r\n      modalPhoto: null,\r\n      popover: false,\r\n      filterModal: false,\r\n      activeSelection: \"Fault Type\",\r\n      photourl: null,\r\n      amazon: null,\r\n      user: this.getUser(),\r\n      password: null,\r\n      projectArr: this.getProjects(),\r\n      faultClass: [],\r\n      faultTypes: [],\r\n      pageActive: 0,\r\n      checkedFaults: [],\r\n      checked: false,\r\n      activeProject: null,\r\n      activeLayers: [],\r\n      clearDisabled: true,\r\n      message: \"\",\r\n\r\n    };\r\n    \r\n  }\r\n\r\n  getHost() {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      return \"localhost:8443\";\r\n    } else if (process.env.NODE_ENV === \"production\") {\r\n      return \"osmium.nz\";\r\n    } else {\r\n      return \"localhost:8443\";\r\n    }\r\n   }\r\n\r\n  //  getProtocol() {\r\n  //    console.log(\"secure: \" + process.env.REACT_APP_SECURE);\r\n  //    if (process.env.REACT_APP_SECURE === true) {\r\n  //      return \"https://\";\r\n  //    } else {\r\n  //      return \"http://\";\r\n  //     }\r\n  //  }\r\n\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n    this.customNav.current.setTitle(this.state.user);\r\n    this.customNav.current.setOnClick(this.state.loginModal);\r\n    this.callBackendAPI()\r\n    .catch(err => alert(err));\r\n    //console.log(process.env.NODE_ENV);\r\n  }\r\n\r\n  componentDidUpdate() {   \r\n    \r\n    \r\n  }\r\n\r\n  callBackendAPI = async () => {\r\n    //console.log(\"calling api...\");\r\n    const response = await fetch(\"https://\" + this.state.host + '/api'); \r\n    //console.log(response.body);\r\n    const body = await response.json();\r\n    if (response.status !== 200) {\r\n      alert(body);   \r\n      throw Error(body.message) \r\n    }\r\n    return body;\r\n  };\r\n\r\n  getProjects() {\r\n    let cookie = Cookies.get('projects');\r\n    if (cookie === undefined) {\r\n      return [];\r\n    } else {\r\n      return JSON.parse(cookie);\r\n    }    \r\n  }\r\n  /**\r\n   * Checks if user has cookie. If not not logged in.\r\n   * Returns username in cookie if found else 'Login'\r\n   */\r\n  getUser() {\r\n    let cookie = Cookies.get('user');\r\n    if (cookie === undefined) {\r\n      return \"Login\";\r\n    } else {\r\n      return cookie;\r\n    }    \r\n  }\r\n\r\n  getLoginModal(user) {\r\n    if (user === \"Login\") {\r\n      return (e) => this.clickLogin(e);\r\n    } else {\r\n      return (e) => this.logout(e);\r\n    }\r\n  }\r\n\r\n  getCustomIcon(data, zoom) {\r\n    let icon = null;\r\n    const size = this.getSize(zoom);\r\n    if (data === \"5\") {\r\n      icon = L.icon({\r\n      iconUrl: 'CameraSpringGreen_16px.png',\r\n      iconSize: [size, size],\r\n      iconAnchor: [size / 2, size / 2],\r\n      });\r\n    } else if (data === \"4\") {\r\n      icon = L.icon({\r\n      iconUrl: 'CameraOrange_16px.png',\r\n      iconSize: [size, size],\r\n      iconAnchor: [size / 2, size / 2],\r\n      });      \r\n    } else if (data === \"3\") {\r\n      icon = L.icon({\r\n      iconUrl: 'CameraLemon_16px.png',\r\n      iconSize: [size, size],\r\n      iconAnchor: [size / 2, size / 2],\r\n      });\r\n    } else  {\r\n      icon = L.icon({\r\n      iconUrl: 'CameraSpringGreen_16px.png',\r\n      iconSize: [size, size],\r\n      iconAnchor: [size / 2, size / 2],\r\n      });\r\n    }  \r\n    return icon;\r\n  }\r\n\r\n  /**\r\n   * returns the current icon size when zoom level changes\r\n   * @param {the current zoom level} zoom \r\n   */\r\n  getSize(zoom) {\r\n    if (zoom < 10) {\r\n      return 4;\r\n    } else if (zoom >= 10 && zoom <= 14) {\r\n      return 10;\r\n    } else if (zoom > 14 && zoom <= 16) {\r\n      return 16;\r\n    } else if  (zoom > 16 && zoom <= 18){\r\n      return 20;\r\n    } else {\r\n      return 32;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds db data to various arrays and an object. Then sets state to point to arrays. \r\n   * @param {data retreived from database} data\r\n   */\r\n\r\n  async addMarkers(data) {\r\n    let objData = [];\r\n    let latLngs = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      let obj = {};\r\n      const position = JSON.parse(data[i].st_asgeojson);\r\n      const lng = position.coordinates[0];\r\n      const lat = position.coordinates[1];\r\n      let latlng = L.latLng(lat, lng);\r\n      latLngs.push(latlng);\r\n      obj = {\r\n        roadid: data[i].roadid,\r\n        carriage: data[i].carriagewa,\r\n        location: data[i].location,\r\n        fault: data[i].fault,\r\n        size: data[i].size,\r\n        priority: data[i].priority,\r\n        photo: data[i].photoid,\r\n        datetime: data[i].faulttime,\r\n        latlng: latlng\r\n      };\r\n      objData.push(obj);    \r\n    }\r\n\r\n    let bounds = L.latLngBounds(latLngs);\r\n    //let center = bounds.getCenter();\r\n    const map = this.map.leafletElement;\r\n    map.fitBounds(bounds);\r\n\r\n    this.setState({objData: objData});\r\n  }\r\n\r\n  addCentrelines(data) {\r\n    let lineData = [];\r\n    console.log(data.length);\r\n    for (var i = 0; i < data.length; i++) {\r\n      const linestring = JSON.parse(data[i].st_asgeojson); \r\n      if(linestring !== null) {\r\n        var points = [];\r\n        var segment = linestring.coordinates[0];\r\n        for (var j = 0; j < segment.length; j++) {\r\n          var point = segment[j];\r\n          let latlng = L.latLng(point[1], point[0]);\r\n          points.push(latlng);\r\n        }     \r\n      }\r\n      lineData.push(points);\r\n    }\r\n    this.setState({centreData: lineData});\r\n  }\r\n\r\n  \r\n\r\n  //EVENTS\r\n  /**\r\n   * fires when user scrolls mousewheel\r\n   * param - e the mouse event\r\n   **/\r\n  onZoom(e) {\r\n    this.setState({zoom: e.target.getZoom()});\r\n    this.setState({bounds: e.target.getBounds()});\r\n  }\r\n\r\n  /**\r\n   * toogles between satellite and map view by swapping z-index\r\n   * @param {the control} e \r\n   */\r\n  toogleMap(e) {\r\n    if (this.state.mode === \"map\") {\r\n      this.setState({zIndex: 1000});\r\n      this.setState({mode: \"sat\"});\r\n      this.setState({osmThumbnail: \"map64.png\"});\r\n    } else {\r\n      this.setState({zIndex: 900});\r\n      this.setState({mode: \"map\"});\r\n      this.setState({osmThumbnail: \"satellite64.png\"})\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired when user clciks photo on thumbnail\r\n   * @param {event} e \r\n   */\r\n  clickImage(e) {    \r\n    this.setState({show: true});\r\n    let photo = this.getFault(this.state.index, 'photo');\r\n    this.setState({currentPhoto: photo});\r\n  }\r\n\r\n  getPhoto(direction) {\r\n    let photo = this.state.currentPhoto;\r\n    let intSuffix = (parseInt(photo.slice(photo.length - 5, photo.length)));\r\n    let n = null;\r\n    if (direction === \"prev\") {\r\n      n = intSuffix - 1;\r\n    } else {\r\n      n = intSuffix + 1;\r\n    }\r\n    let newSuffix = this.pad(n, 5);\r\n    let prefix = photo.slice(0, photo.length - 5);\r\n    let newPhoto = prefix + newSuffix;\r\n    this.setState({currentPhoto: newPhoto});\r\n    return newPhoto;\r\n  }\r\n\r\n  clickPrev(e) {\r\n  const newPhoto = this.getPhoto(\"prev\");\r\n  this.setState({currentPhoto: newPhoto});\r\n\tconst url = this.state.amazon + newPhoto + \".jpg\";\r\n  this.setState({photourl: url});\r\n  }\r\n  \r\n  clickNext(e) {\r\n  const newPhoto = this.getPhoto(\"next\");\r\n  this.setState({currentPhoto: newPhoto});\r\n  const url = this.state.amazon + newPhoto + \".jpg\";\r\n\tthis.setState({photourl: url});\r\n  }\r\n\r\n  clickMarker(e) {\r\n    let marker = e.target;\r\n    const index = marker.options.index;\r\n    this.setState({index: index});\r\n    this.setState({popover: true});\r\n  }\r\n\r\n  /**\r\n   * resets to null state when user logouts\r\n   */\r\n  reset() {\r\n    \r\n    Cookies.remove('token');\r\n    Cookies.remove('user');\r\n    Cookies.remove('projects');\r\n    this.customNav.current.setOnClick((e) => this.clickLogin(e));\r\n    this.customNav.current.setTitle(\"Login\");\r\n    this.setState({activeProject: null})\r\n    this.setState({projectArr: []});\r\n    this.setState({checkedFaults: []});\r\n    this.setState({objData: []});\r\n    this.setState({activeLayers: []});\r\n    this.setState({login: \"Login\"});\r\n  }\r\n\r\n  async logout(e) {\r\n    const response = await fetch(\"https://\" + this.state.host + '/logout', {\r\n      method: 'POST',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        \"authorization\": this.state.token,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',        \r\n      },\r\n      body: JSON.stringify({\r\n        user: this.state.login,\r\n      })\r\n    });\r\n    const body = await response.json();\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    } \r\n    this.reset();\r\n   \r\n  }\r\n\r\n  async login(e) {  \r\n    e.preventDefault();\r\n    const response = await fetch('https://' + this.state.host + '/login', {\r\n      method: 'POST',\r\n      credentials: 'same-origin',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',        \r\n      },\r\n      body: JSON.stringify({\r\n        user: this.userInput.value,\r\n        key: this.passwordInput.value\r\n      })\r\n    });\r\n    const body = await response.json();\r\n    console.log(body);\r\n    if (response.status !== 200) {\r\n      throw Error(body.message) \r\n    } \r\n    \r\n    if (body.result) {\r\n      Cookies.set('token', body.token, { expires: 7 });\r\n      Cookies.set('user', body.user, { expires: 7 });\r\n      this.setState({login: body.user});\r\n      this.setState({token: body.token}); \r\n      this.buildProjects(body.projects);   \r\n      this.customNav.current.setTitle(body.user);\r\n      this.customNav.current.setOnClick((e) => this.logout(e));\r\n      this.setState({showLogin: false});\r\n      this.setState({message: \"\"})\r\n    } else {\r\n      this.setState({message: \"Username or password is incorrect!\"});\r\n    } \r\n     \r\n  }\r\n\r\n  /**\r\n   * loops through project array received from db and sets\r\n   * project array in the state. Sets project cookie\r\n   * @param {Array} projects \r\n   */\r\n  buildProjects(projects) {    \r\n    let prj = []\r\n    for(var i = 0; i < projects.length; i += 1) {\r\n      prj.push(projects[i]);\r\n    }\r\n    Cookies.set('projects', JSON.stringify(prj), { expires: 7 })\r\n    this.setState({projectArr: prj});\r\n  }\r\n\r\n  /**\r\n   * checks if layer loaded if not adds layer to active layers\r\n   * calls fetch layer\r\n   * @param {event} e \r\n   */\r\n  loadLayer(e) {   \r\n    for(var i = 0; i < this.state.activeLayers.length; i += 1) { //check if loaded\r\n      if (this.state.activeLayers[i].code === e.target.attributes.code.value) {  //if found\r\n        return;\r\n      }\r\n    }\r\n    this.setState({activeProject: e.target.attributes.code.value});\r\n    for (var i = 0; i < this.state.projectArr.length; i += 1) { //find project\r\n      if (this.state.projectArr[i].code === e.target.attributes.code.value) {  //if found\r\n        let project = {code: this.state.projectArr[i].code, description: this.state.projectArr[i].description, date: this.state.projectArr[i].date}\r\n        this.setState({amazon: this.state.projectArr[i].amazon});\r\n        this.state.activeLayers.push(project);\r\n      }\r\n    }\r\n    this.filterLayer(e.target.attributes.code.value);     \r\n  }\r\n\r\n  removeLayer(e) {\r\n    let layers = this.state.activeLayers;\r\n    for(var i = 0; i < layers.length; i += 1) {     \r\n      if (e.target.attributes.code.value === layers[i].code) {\r\n        layers.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    //TODO clear the filter\r\n    this.setState({activeLayers: layers});\r\n  }\r\n\r\n/**\r\n * \r\n * @param {String} project data to fetch\r\n */\r\n  async filterLayer(project) {\r\n    if (this.state.login !== \"Login\") {\r\n      const response = await fetch('https://' + this.state.host + '/layer', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"authorization\": this.state.token,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        user: this.state.login,\r\n        project: project,\r\n        filter: this.state.checkedFaults   \r\n      })\r\n    }).catch(() => {\r\n      console.log(\"error\");\r\n      return;\r\n    });\r\n    if (typeof response !== \"undefined\" && response.status === 200) {\r\n      const body = await response.json();  \r\n      await this.addMarkers(body);\r\n    } else {     \r\n    }    \r\n  }    \r\n}\r\n\r\nsubmitFilter(e) {\r\n  this.setState({filterModal: false});\r\n  this.filterLayer(this.state.activeProject);\r\n\r\n}\r\n\r\nasync loadCentreline(e) {\r\n  if (this.state.login !== \"Login\") {\r\n      const response = await fetch('https://' + this.state.host + '/roads', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"authorization\": this.state.token,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        code: \"900\",\r\n        menu: e.target.id,\r\n        user: this.state.login\r\n      })\r\n    })\r\n    if (response.status !== 200) {\r\n      console.log(response.status);\r\n    } \r\n    const body = await response.json();\r\n    await this.addCentrelines(body);\r\n  } else {\r\n    \r\n  }    \r\n}\r\n\r\n  async loadFilters() {\r\n    if (this.state.login !== \"Login\") {\r\n      const response = await fetch('https://' + this.state.host + '/class', {\r\n        method: 'POST',\r\n        headers: {\r\n          \"authorization\": this.state.token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user: this.state.login\r\n        })\r\n      })\r\n      if (response.status !== 200) {\r\n        console.log(response.status);\r\n      } \r\n      const classes = await response.json();\r\n      this.setState({faultClass: classes});\r\n      this.getFaultTypes(this.state.faultClass[0].code);\r\n    }\r\n  }\r\n\r\n  async getFaultTypes(cls) {\r\n    if (this.state.login !== \"Login\") {\r\n      const response = await fetch('https://' + this.state.host + '/faults', {\r\n        method: 'POST',\r\n        headers: {\r\n          \"authorization\": this.state.token,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user: this.state.login,\r\n          type: cls\r\n        })\r\n      })\r\n      if (response.status !== 200) {\r\n        console.log(response.status);\r\n      } \r\n      const faults = await response.json();\r\n      faults.map(obj => obj[\"type\"] = cls)\r\n      //console.log(faults);\r\n      this.setState({faultTypes: faults});\r\n    }\r\n  }\r\n\r\n  clickLogin(e) {\r\n    e.preventDefault();\r\n    this.setState({showLogin: true});   \r\n  }\r\n\r\n  clickAbout(e) {\r\n    this.setState({showAbout: true});  \r\n  }\r\n\r\n  clickTerms(e) {\r\n    this.setState({showTerms: true});  \r\n  }\r\n\r\n  clickContact(e) {\r\n    this.setState({showContact: true});  \r\n  }\r\n\r\n  clickClose(e) {\r\n    this.setState({showContact: false});\r\n    this.setState({showAbout: false});    \r\n    this.setState({showTerms: false});    \r\n  }\r\n\r\n  clickPage(index) {\r\n    this.setState({pageActive: index});\r\n    this.getFaultTypes(this.state.faultClass[index].code);\r\n  }\r\n\r\n  changeCheck(e) {\r\n    //if checked true we are adding values to arr\r\n    let arr = this.state.checkedFaults;\r\n    if (e.target.checked) {\r\n      arr.push(e.target.id);                \r\n    } else {\r\n      for (var i = 0; i < arr.length; i += 1) {\r\n        if (e.target.id === arr[i]) {\r\n          arr.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    }  \r\n    this.setState({checkedFaults: arr});\r\n  }\r\n\r\n/**\r\n * checks if each fault is checked by searching checkedFault array\r\n * @param {the id of the checkbox i.e. fault type} value \r\n * @return {}\r\n */\r\n  isChecked(value) {\r\n    for (var i = 0; i < this.state.checkedFaults.length; i += 1) {\r\n      if (value === this.state.checkedFaults[i]) {\r\n        return true;\r\n      }     \r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * called when photoviewer closed\r\n   */\r\n  closeModal() {\r\n    this.setState({show: false});\r\n    this.setState({popover: false});\r\n  }\r\n\r\n  clickFilter(e) {\r\n    this.setState({index: null});\r\n    this.setState({filterModal: true});\r\n    this.loadFilters();\r\n  }\r\n\r\n  /**\r\n   * clear checked fault array \r\n   * @param {the button} e \r\n   */\r\n  clearFilter(e) {\r\n    this.setState({checkedFaults: []});\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {the number to pad} n \r\n   * @param {the amount of pading} width \r\n   * @param {digit to pad out number with (default '0'} z \r\n   * @return {the padded number (string)}\r\n   */\r\n  pad(n, width, z) {\r\n    z = z || '0';\r\n    n = n + '';\r\n    return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\r\n    }\r\n\r\n  /**\r\n   * returns a random hex color\r\n   */\r\n  getColor() {\r\n    return '#' +  Math.random().toString(16).substr(-6);\r\n  }\r\n/**\r\n * gets the requested attribute from the fault object array\r\n * @param {the index of marker} index \r\n * @param {the property of the fault} attribute \r\n */\r\n  getFault(index, attribute) {\r\n    //console.log(index);\r\n    if (this.state.objData.length !== 0 && index !== null) {\r\n      switch(attribute) {\r\n        case \"fault\":\r\n          return  this.state.objData[index].fault;\r\n        case \"priority\":        \r\n          return  this.state.objData[index].priority;\r\n        case \"location\":\r\n          return  this.state.objData[index].location;\r\n        case \"size\":\r\n          return  this.state.objData[index].size;\r\n        case \"datetime\":\r\n          return  this.state.objData[index].datetime;\r\n        case \"photo\":\r\n          return  this.state.objData[index].photo;\r\n        default:\r\n          return null;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  tableLoad(e) {\r\n    console.log(e.target);\r\n  }\r\n\r\n  closePhotoModal(e) {\r\n   \r\n    this.setState({show: false});\r\n  }\r\n\r\n  clickGroup(e) {\r\n    console.log(\"click\");\r\n  }\r\n\r\n  \r\n  //RENDER\r\n\r\n  render() {\r\n\r\n    \r\n\r\n    const pointClick = (feature, map) => {\r\n      setTimeout(function() {\r\n        map.openPopup(feature.properties.title,\r\n          [\r\n            feature.geometry.coordinates[1],\r\n            feature.geometry.coordinates[0]\r\n          ]\r\n        )\r\n      }, 300)\r\n    }\r\n\r\n    let geojson = {\r\n      'type': 'FeatureCollection',\r\n      'features': [{\r\n                    \"type\": \"Feature\",\r\n                    \"geometry\": {\r\n                        \"type\": \"Point\",\r\n                        \"coordinates\": [-77.03238901390978, 38.913188059745586]\r\n                    },\r\n                    \"properties\": {\r\n                        \"title\": \"Washington DC\",\r\n                        id: 2,\r\n                        size: 5,\r\n                        color: [92, 184, 92],\r\n                        \"icon\": \"monument\"\r\n                    }\r\n                  }, {\r\n                          \"type\": \"Feature\",\r\n                          \"geometry\": {\r\n                              \"type\": \"Point\",\r\n                              \"coordinates\": [-122.414, 37.776]\r\n                          },\r\n                          \"properties\": {\r\n                            \"title\": \"San Francisco\",\r\n                            id: 3,\r\n                            size: 3,\r\n                            color: [92, 184, 92]\r\n                          }\r\n                      }]\r\n    }\r\n    const centre = [this.state.location.lat, this.state.location.lng];\r\n    const { fault } = this.state.fault;\r\n    const { photo } = this.state.photos;  \r\n    const ref = React.createRef();\r\n\r\n    const CustomTile = function CustomTile (props) {\r\n        return (\r\n            <TileLayer className=\"mapLayer\"\r\n            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors and Chat location by Iconika from the Noun Project\"\r\n            url={\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}\r\n          />\r\n      );\r\n    }\r\n\r\n    const LayerNav = function LayerNav(props) {\r\n      if (props.layers.length > 0) {\r\n        return (\r\n          <Nav>          \r\n          <NavDropdown className=\"navdropdown\" title=\"Layers\" id=\"basic-nav-dropdown\">\r\n            <CustomMenu title=\"Add Layer\" className=\"navdropdownitem\" projects={props.projects} onClick={props.loadLayer}/>\r\n            <NavDropdown.Divider />\r\n            {/* <NavDropdown.Item className=\"navdropdownitem\" href=\"#centreline\" onClick={(e) => this.removeLayer(e)}>Remove Layer </NavDropdown.Item>\r\n            <NavDropdown.Divider /> */}\r\n            <CustomMenu title=\"Remove Layer\" className=\"navdropdownitem\" projects={props.layers} onClick={props.removeLayer}/>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item className=\"navdropdownitem\" href=\"#centreline\" onClick={(e) => this.loadCentreline(e)}>Add centreline </NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item className=\"navdropdownitem\" href=\"#filter\"  onClick={props.clickFilter}>Filter Layer</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        );\r\n      } else {\r\n        return (\r\n          <Nav>          \r\n          <NavDropdown className=\"navdropdown\" title=\"Layers\" id=\"basic-nav-dropdown\">\r\n            <CustomMenu title=\"Add Layer\" className=\"navdropdownitem\" projects={props.projects} layers={props.layers} onClick={props.loadLayer}/>\r\n            {/* <NavDropdown.Divider />\r\n            <NavDropdown.Item title=\"Remove Layer\" className=\"navdropdownitem\" href=\"#centreline\" onClick={(e) => this.removeLayer(e)}>Remove layer</NavDropdown.Item> */}\r\n            {/* <NavDropdown.Divider />\r\n            <NavDropdown.Item className=\"navdropdownitem\" href=\"#filter\"  onClick={(e) => this.clickFilter(e)}>Filter Layer</NavDropdown.Item> */}\r\n          </NavDropdown>\r\n        </Nav>\r\n        );\r\n      }\r\n    }\r\n    const CustomMenu = function(props) {\r\n      if (typeof props.projects === 'undefined' || props.projects.length === 0) {\r\n          return (    \r\n            <NavDropdown.Item title={props.title} className=\"dropdownitem\">Add Layers\r\n            </NavDropdown.Item>\r\n            );\r\n      } else {  \r\n        return (        \r\n          <NavDropdown title={props.title} className=\"navdropdownitem\" drop=\"right\">\r\n          {props.projects.map((value, index) =>      \r\n            <NavDropdown.Item className=\"navdropdownitem\"\r\n              key={`${index}`}\r\n              index={index}\r\n              title={value.code}\r\n              code={value.code}\r\n              onClick={props.onClick}>\r\n                {value.description + \" \" + value.date}\r\n            </NavDropdown.Item>\r\n          )}\r\n          <NavDropdown.Divider />\r\n          </NavDropdown>\r\n          );\r\n      }\r\n    }\r\n\r\n    return (   \r\n      <> \r\n        <div>\r\n\r\n          <Navbar bg=\"light\" expand=\"lg\"> \r\n            <Navbar.Brand href=\"#home\">\r\n            <img\r\n                src=\"logo.png\"\r\n                width=\"122\"\r\n                height=\"58\"\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"logo\"\r\n              />\r\n              </Navbar.Brand>\r\n              <LayerNav project={this.state.activeProject} projects={this.state.projectArr} layers={this.state.activeLayers} removeLayer={(e) => this.removeLayer(e)} loadLayer={(e) => this.loadLayer(e)} clickFilter={(e) => this.clickFilter(e)}></LayerNav>\r\n            <Nav>\r\n              <NavDropdown className=\"navdropdown\" title=\"Help\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item className=\"navdropdownitem\" href=\"#terms\" onClick={(e) => this.clickTerms(e)} >Terms of Use</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item className=\"navdropdownitem\" href=\"#contact\" onClick={(e) => this.clickContact(e)} >Contact</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item className=\"navdropdownitem\" id=\"Documentation\" href=\"#documentation\" onClick={(e) => this.documentation(e)}>Documentation</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item className=\"navdropdownitem\" href=\"#about\" onClick={(e) => this.clickAbout(e)} >About</NavDropdown.Item>             \r\n              </NavDropdown>         \r\n            </Nav>\r\n            <CustomNav ref={this.customNav} className=\"navdropdown\"/>\r\n          </Navbar>         \r\n        </div>      \r\n        <div className=\"map\">\r\n        <Map        \r\n          ref={(ref) => { this.map = ref; }}\r\n          className=\"map\"\r\n          fault={fault}\r\n          photo={photo}\r\n          worldCopyJump={true}\r\n          boxZoom={true}\r\n          center={centre}\r\n          zoom={this.state.zoom}\r\n          onZoom={(e) => this.onZoom(e)}>\r\n          <TileLayer className=\"mapLayer\"\r\n            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors and Chat location by Iconika from the Noun Project\"\r\n            url={\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}\r\n            zIndex={999}\r\n          />\r\n          <ScaleControl/>\r\n          <Image className=\"satellite\" src={this.state.osmThumbnail} onClick={(e) => this.toogleMap(e)} thumbnail={true}/>\r\n          <LayersControl position=\"topright\">\r\n          {this.state.activeLayers.map((layer, index) => \r\n            <LayersControl.Overlay  key={`${index}`} checked name={layer.description + \" \" + layer.date}>\r\n              <LayerGroup >\r\n              {this.state.objData.map((obj, index) =>          \r\n                <Marker \r\n                  key={`${index}`}\r\n                  index={index}\r\n                  data={fault}\r\n                  photo={photo}\r\n                  position={obj.latlng} \r\n                  icon={this.getCustomIcon(this.getFault(index, 'priority'), this.state.zoom)}\r\n                  draggable={false} \r\n                  onClick={(e) => this.clickMarker(e)}\t\t\t\t  \r\n                  >\r\n                  <Popup className=\"popup\">\r\n                  <div>\r\n                    <p className=\"faulttext\">\r\n                      <b>{\"Type: \"}</b> {this.getFault(index, 'fault')} <br></br> <b>{\"Priority: \"} </b> {this.getFault(index, 'priority')} <br></br><b>{\"Location: \"} </b> {this.getFault(index, 'location')}\r\n                    </p>\r\n                    <div>\r\n                    <Image className=\"thumbnail\" src={this.state.amazon + this.getFault(index, 'photo') + \".jpg\"} photo={photo} onClick={(e) => this.clickImage(e)} thumbnail={true}></Image >\r\n                    </div>          \r\n                  </div>\r\n                  </Popup>  \r\n                </Marker>\r\n                )}     \r\n              </LayerGroup>\r\n            </LayersControl.Overlay>\r\n          )}\r\n          </LayersControl>\r\n          {this.state.centreData.map((latlngs, index) => \r\n          <Polyline \r\n            key={`${index}`}\r\n            weight={3}\r\n            color={this.getColor()}\r\n            smoothFactor={3}\r\n            positions={latlngs}>\r\n          </Polyline>\r\n          )} \r\n      </Map >   \r\n      </div>\r\n      <Modal className=\"filterModal\" show={this.state.filterModal} size={'lg'} centered={true}>\r\n        <Modal.Header>\r\n          <Modal.Title>Filter</Modal.Title><br></br>\r\n          <Pagination size=\"sm\">\r\n            {this.state.faultClass.map((value, index) =>        \r\n              <Pagination.Item  key={`${index}`} className={\"page-item\"} active={index === this.state.pageActive} onClick={() => this.clickPage(index)}>{value.description}\r\n              </Pagination.Item>          \r\n            )}\r\n          </Pagination>\r\n        </Modal.Header>\r\n        <Modal.Body >\t\r\n        <Table size=\"sm\" striped bordered hover>\r\n          <thead>\r\n          </thead> \r\n          <tbody>      \r\n          {this.state.faultTypes.map((value, index) => \r\n            <tr className='tablerow' key={`${index}`}>\r\n                <td>                   \r\n                <input type=\"checkbox\" id={value.fault} checked={this.isChecked(value.fault)} onChange={(e) => this.changeCheck(e)}/> {value.fault}\r\n                </td>\r\n            </tr>\r\n          )}\r\n          </tbody>\r\n          </Table>\r\n\t\t    </Modal.Body>\r\n        <Modal.Footer>\r\n        <div><Button className=\"clear\" variant=\"primary\" type=\"submit\" onClick={(e) => this.clearFilter(e)}>\r\n            Clear Filter\r\n          </Button>\r\n          </div>\r\n          <div><Button className=\"submit\" variant=\"primary\" type=\"submit\" onClick={(e) => this.submitFilter(e)}>\r\n            Filter\r\n          </Button>\r\n          </div>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal className=\"termsModal\" show={this.state.showTerms} size={'md'} centered={true}>\r\n        <Modal.Header>\r\n          <Modal.Title><h2>Road Inspection Viewer</h2></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\t\r\n          By using this software you confirm you have read and agreed to the Onsite Developments Ltd. <a href={\"https://osmium.nz/?#terms\"}> Click for terms of use.</a><br></br>\r\n          All data on this site from Land Information New Zealand is made available under a Creative Commons Attribution Licence.<br></br>\r\n          <span >&copy; 2019 Onsite Developments Ltd. All rights reserved.</span><br></br>\r\n\t\t    </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={(e) => this.clickClose(e)}>\r\n              Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal className=\"aboutModal\" show={this.state.showAbout} size={'md'} centered={true}>\r\n        <Modal.Header>\r\n          <Modal.Title><h2>About</h2> </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\t\r\n          <b>Road Inspection Version 1.0</b><br></br>\r\n          Relased: 12/01/2020<br></br>\r\n          Company: Onsite Developments Ltd.<br></br>\r\n          Software Developer: Matt Wynyard <br></br>\r\n          <img src=\"logo192.png\" alt=\"React logo\"width=\"24\" height=\"24\"/> React: 16.12.0<br></br>\r\n          <img src=\"bootstrap.png\" alt=\"Bottstrap logo\" width=\"24\" height=\"24\"/> Bootstrap: 4.4.0<br></br>\r\n          <img src=\"leafletlogo.png\" alt=\"Leaflet logo\" width=\"60\" height=\"16\"/>Leaflet: 1.6.0<br></br>\r\n          <img src=\"reactbootstrap.png\" alt=\"React-Bootstrap logo\" width=\"24\" height=\"24\"/>React-bootstrap: 1.0.0-beta.16<br></br>\r\n          React-leaflet: 2.6.0<br></br>\r\n\t\t    </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" size='sm' type=\"submit\" onClick={(e) => this.clickClose(e)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      {/* login modal     */}\r\n      </Modal>\r\n      <Modal show={this.state.showLogin} size={'sm'} centered={true}>\r\n        <Modal.Header>\r\n          <Modal.Title><img src=\"padlock.png\" alt=\"padlock\" width=\"42\" height=\"42\"/> Login </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\t\r\n        <Form>\r\n          <Form.Group controlId=\"userName\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Enter username\" ref={user => this.userInput = user} />\r\n          </Form.Group>\r\n          <Form.Text className= \"message\">{this.state.message}</Form.Text>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>           \r\n            <Form.Control type=\"password\" placeholder=\"Password\" ref={key=> this.passwordInput = key}/>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={(e) => this.login(e)}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n\t\t    </Modal.Body>\r\n        <Modal.Footer>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n \r\n      <Modal show={this.state.show} size={'xl'} >\r\n        <Modal.Body className=\"photoBody\">\t\r\n        <div className=\"container\">\r\n              <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                  <b>{\"Type: \"}</b> {this.getFault(this.state.index, 'fault')} <br></br> <b>{\"Priority: \"} </b> {this.getFault(this.state.index, 'priority')} <br></br><b>{\"Location: \"} </b> {this.getFault(this.state.index, 'priority')}\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <b>{\"Size: \"}</b> {this.getFault(this.state.index, 'size')} <br></br> <b>{\"DateTime: \"} </b> {this.getFault(this.state.index, 'datetime')}\r\n              </div>\r\n              </div>\r\n            </div>\t\r\n\t\t      <Image className=\"photo\" src={this.state.amazon + this.state.currentPhoto + \".jpg\"} data={fault} onClick={(e) => this.clickImage(e)} thumbnail></Image >\t\t\r\n\t\t    </Modal.Body >\r\n        <Modal.Footer>\r\n\t\t      <Button className=\"prev\" onClick={(e) => this.clickPrev(e)}> \r\n            Previous\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={(e) => this.closePhotoModal(e)}>\r\n            Close\r\n          </Button>\r\n          <Button className=\"next\" variant=\"primary\" onClick={(e) => this.clickNext(e)}>\r\n            Next\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className=\"footer\">\r\n      </div> \r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}